name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    # 1. FIX: Robustly download history from GitHub Pages (for trend data)
    - name: Download Allure history
      if: always()
      run: |
        PREVIOUS_HISTORY_DIR=reports/allure-results/history
        REPORT_BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        
        mkdir -p ${PREVIOUS_HISTORY_DIR}

        # Use a reliable check to see if the history file exists
        if curl -s -f -o /dev/null ${REPORT_BASE_URL}/history/history.json; then
          echo "Previous history found, downloading files..."
          # Download all necessary trend files
          wget -r -l1 -np -nd -A '*-trend.json,history.json' ${REPORT_BASE_URL}/history/ -P ${PREVIOUS_HISTORY_DIR} || true
        else
          echo "No previous history found. Generating first report."
        fi

    - name: Set up Docker Compose
      uses: ndeloof/install-compose-action@v0.0.1
    
    - name: Build and run tests in Docker
      run: |
        # Ensure your docker-compose.yml has volume mapping:
        # - ./reports/allure-results:/app/reports/allure-results
        docker-compose up --build --exit-code-from test
    
    # 2. FIX: Permissions after Docker run (CRITICAL for host access)
    - name: Fix permissions for Allure results
      if: always()
      run: |
        # Ensure the runner can read the files written by the container (usually root)
        sudo chmod -R 777 reports/allure-results

    - name: Install Allure and setup reports directory
      if: always()
      run: |
        curl -o allure-2.24.1.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
        sudo tar -zxvf allure-2.24.1.tgz -C /opt/
        sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
        sudo mkdir -p reports/allure-results reports/allure-report
        sudo chmod -R 777 reports
        sudo chown -R $USER:$USER reports
    
    - name: Generate Allure Report
      if: always()
      run: |
        # Explicitly run allure generate (assuming npm script is this)
        allure generate reports/allure-results --clean -o reports/allure-report

        # 3. FIX: Save the NEWLY GENERATED history back to reports/allure-results
        # This fixes the trends for the *next* run and fixes the 'cp: cannot stat' error
        NEW_HISTORY_SOURCE=reports/allure-report/history
        NEW_HISTORY_DEST=reports/allure-results/history
        mkdir -p ${NEW_HISTORY_DEST}
        # Use safe copy: cp -r source/. destination
        cp -r ${NEW_HISTORY_SOURCE}/. ${NEW_HISTORY_DEST} || true
        
        # Create header with styling
        cat << 'EOF' > header.html
        <style>
          .custom-header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 20px;
            margin-bottom: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
          }
          .custom-header h1 {
            margin: 0;
            font-size: 24px;
            font-weight: 600;
          }
          .metadata-box {
            background: #f8f9fa;
            padding: 15px;
            margin: 20px 0;
            border-radius: 8px;
            border-left: 4px solid #3498db;
          }
          .metadata-box p {
            margin: 5px 0;
            color: #2c3e50;
          }
          .metadata-box strong {
            color: #2c3e50;
          }
        </style>
        <div class="custom-header">
          <h1>Playwright E2E BDD Framework - Test Reports</h1>
        </div>
        EOF
        
        # Add metadata about test run
        TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
        COMMIT_URL="https://github.com/$GITHUB_REPOSITORY/commit/$GITHUB_SHA"
        
        cat << EOF > metadata.html
        <div class="metadata-box">
          <p><strong>Last Updated:</strong> $TIMESTAMP</p>
          <p><strong>Branch:</strong> ${GITHUB_REF#refs/heads/}</p>
          <p><strong>Commit:</strong> <a href="$COMMIT_URL" target="_blank">${GITHUB_SHA:0:7}</a></p>
          <p><strong>Repository:</strong> <a href="https://github.com/$GITHUB_REPOSITORY" target="_blank">$GITHUB_REPOSITORY</a></p>
        </div>
        EOF
        
        # Combine with Allure report
        mkdir -p reports/allure-report-with-header
        cp -r reports/allure-report/* reports/allure-report-with-header/
        
        # Download favicon
        curl -s https://raw.githubusercontent.com/microsoft/playwright/main/assets/playwright-logo.svg > reports/allure-report-with-header/favicon.svg
        
        # 4. FIX: CACHE BUSTING: Inject no-cache meta tags into index.html
        CACHE_BUSTING_TAGS='<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Expires" content="0">'
        
        # Update the report HTML with our custom content, favicon, and cache tags
        sed -i "s|<head>|<head>$CACHE_BUSTING_TAGS<link rel=\"icon\" type=\"image/svg+xml\" href=\"favicon.svg\"><title>Playwright E2E Test Report</title>|" reports/allure-report-with-header/index.html
        
        # Combine header, metadata, and report
        cat header.html metadata.html reports/allure-report-with-header/index.html > temp && mv temp reports/allure-report-with-header/index.html

    - name: Setup Pages
      if: always()
      uses: actions/configure-pages@v4

    - name: Upload Report to Pages
      if: always()
      uses: actions/upload-pages-artifact@v3
      with:
        path: reports/allure-report-with-header
        retention-days: 90

    - name: Deploy to GitHub Pages
      if: always()
      id: deployment
      uses: actions/deploy-pages@v4
