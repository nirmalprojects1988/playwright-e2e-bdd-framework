---
jobs:
  test-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache Node Modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Download Allure history
        if: always()
        id: download_history
        run: >
          PREVIOUS_HISTORY_DIR=reports/allure-results/history

          REPORT_BASE_URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"


          mkdir -p reports/allure-results/widgets reports/allure-results/history

          CACHE_BUSTER=$(date +%s%3N)

          echo "Attempting to download history from: ${REPORT_BASE_URL}"


          # Download all history files directly into the expected Allure results structure

          curl -fsSL --retry 5 "${REPORT_BASE_URL}/history/history.json?t=${CACHE_BUSTER}" -o ${PREVIOUS_HISTORY_DIR}/history.json || true

          curl -fsSL --retry 5 "${REPORT_BASE_URL}/widgets/summary.json?t=${CACHE_BUSTER}" -o reports/allure-results/widgets/summary.json || true

          curl -fsSL --retry 5 "${REPORT_BASE_URL}/widgets/duration.json?t=${CACHE_BUSTER}" -o reports/allure-results/widgets/duration.json || true


          if [ -f "${PREVIOUS_HISTORY_DIR}/history.json" ]; then
              echo "history_downloaded=true" >> $GITHUB_OUTPUT
              echo "Successfully downloaded previous history."
          else
              echo "history_downloaded=false" >> $GITHUB_OUTPUT
              echo "Warning: No history files found on GitHub Pages. Generating first report."
          fi
      - name: Build and run tests in Docker
        run: |
          docker-compose up --build --exit-code-from test
      - name: Fix permissions and Convert Cucumber JSON
        if: always()
        run: >
          # The conversion script generates files, so permissions need to be right

          sudo chmod -R 777 . # Be overly permissive to avoid common errors


          if [ -f reports/cucumber.json ]; then
            npm ci 
            mkdir -p reports/allure-results
            node tests/support/generate-allure.js
            echo "Conversion successful."
          else
            echo "Warning: reports/cucumber.json not found."
          fi
      - name: Generate Allure Report and Prepare for Deployment
        if: always()
        run: >
          # 5a. Install Allure CLI on the runner

          curl -o allure-2.24.1.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz

          sudo tar -zxvf allure-2.24.1.tgz -C /opt/

          sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure


          # 5b. Generate the report. It uses reports/allure-results/history that was downloaded.

          # The output is reports/allure-report

          allure generate reports/allure-results --clean -o reports/allure-report


          # 5c. Prepare the final deployment folder

          mkdir -p reports/allure-report-with-header


          # CRITICAL FIX: The ONLY thing that should be copied into the deployment folder

          # is the newly generated report, which already contains the new history.

          rsync -a reports/allure-report/ reports/allure-report-with-header/


          # --- Header/Metadata Injection (Rest of your script is fine here) ---


          # Download favicon

          curl -s https://raw.githubusercontent.com/microsoft/playwright/main/assets/playwright-logo.svg > reports/allure-report-with-header/favicon.svg


          # CACHE BUSTING: Inject no-cache meta tags into index.html

          CACHE_BUSTING_TAGS='<meta http-equiv="Cache-Control" content="no-cache, no-store, must-revalidate"><meta http-equiv="Pragma" content="no-cache"><meta http-equiv="Expires" content="0">'


          # Update the report HTML with our custom content, favicon, and cache tags

          sed -i "s|<head>|<head>$CACHE_BUSTING_TAGS<link rel=\"icon\" type=\"image/svg+xml\" href=\"favicon.svg\"><title>Playwright E2E Test Report</title>|" reports/allure-report-with-header/index.html


          HEADER_CONTENT=$(cat header.html | tr -d '\n')

          METADATA_CONTENT=$(cat metadata.html | tr -d '\n')

          CUSTOM_HEADER_CONTENT="$HEADER_CONTENT$METADATA_CONTENT"


          ESCAPED_CONTENT=$(echo "$CUSTOM_HEADER_CONTENT" | sed 's/[\&/]/\\&/g')


          # Robustly insert custom header/metadata after the <body> tag

          sed -i "/<body>/a\\

          $ESCAPED_CONTENT" reports/allure-report-with-header/index.html
      - name: Setup Pages
        if: always()
        uses: actions/configure-pages@v4
      - name: Upload Report to Pages
        if: always()
        uses: actions/upload-pages-artifact@v3
        with:
          path: reports/allure-report-with-header
          retention-days: 90
      - name: Deploy to GitHub Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v4
      - name: Delete Docker Build Cache
        if: success()
        run: docker builder prune -f
