name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  test-docker:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    # Download history from GitHub Pages
    - name: Download Allure history
      if: always()
      run: |
        PREVIOUS_HISTORY_DIR=allure-history
        # Create history directory
        mkdir -p reports/allure-results/history
        # Download history if it exists
        if curl -s -o /dev/null -w "%{http_code}" https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/ | grep -q "200"; then
          wget https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/history.json -P reports/allure-results/history/ || true
          wget https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/history-trend.json -P reports/allure-results/history/ || true
          wget https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/duration-trend.json -P reports/allure-results/history/ || true
          wget https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/categories-trend.json -P reports/allure-results/history/ || true
          wget https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/history/retry-trend.json -P reports/allure-results/history/ || true
        fi

    - name: Set up Docker Compose
      uses: ndeloof/install-compose-action@v0.0.1
    
    - name: Build and run tests in Docker
      run: |
        docker-compose up --build --exit-code-from test
    
    - name: Install Allure and setup reports directory
      if: always()
      run: |
        curl -o allure-2.24.1.tgz -OLs https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.1/allure-commandline-2.24.1.tgz
        sudo tar -zxvf allure-2.24.1.tgz -C /opt/
        sudo ln -s /opt/allure-2.24.1/bin/allure /usr/bin/allure
        sudo mkdir -p reports/allure-results reports/allure-report
        sudo chmod -R 777 reports
        sudo chown -R $USER:$USER reports
    
    - name: Generate Allure Report
      if: always()
      run: |
        npm run report:generate
        
        # Add metadata about test run
        TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
        echo "<div style='background: #f8f9fa; padding: 12px; margin-bottom: 20px; border-radius: 4px;'>" > metadata.html
        echo "<strong>Last Updated:</strong> $TIMESTAMP<br>" >> metadata.html
        echo "<strong>Branch:</strong> ${GITHUB_REF#refs/heads/}<br>" >> metadata.html
        echo "<strong>Commit:</strong> $GITHUB_SHA<br>" >> metadata.html
        echo "</div>" >> metadata.html
        
        # Add custom header and metadata
        echo '<h1>Playwright E2E BDD Framework - Test Reports</h1>' > header.html
        
        # Combine with Allure report
        mkdir -p reports/allure-report-with-header
        cp -r reports/allure-report/* reports/allure-report-with-header/
        
        # Create history directory in published report
        mkdir -p reports/allure-report-with-header/history
        cp -r reports/allure-results/history/* reports/allure-report-with-header/history/ || true
        
        # Combine header, metadata, and report
        cat header.html metadata.html > combined_header.html
        cat combined_header.html reports/allure-report-with-header/index.html > temp && mv temp reports/allure-report-with-header/index.html

    - name: Setup Pages
      if: always()
      uses: actions/configure-pages@v4

    - name: Upload Report to Pages
      if: always()
      uses: actions/upload-pages-artifact@v3
      with:
        path: reports/allure-report-with-header
        retention-days: 90

    - name: Deploy to GitHub Pages
      if: always()
      id: deployment
      uses: actions/deploy-pages@v4

